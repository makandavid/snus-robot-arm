//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RobotArmClient.RobotArmService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommandResult", Namespace="http://schemas.datacontract.org/2004/07/RobotArmServer.Models")]
    public partial class CommandResult : object
    {
        
        private string ResultMessageField;
        
        private RobotArmClient.RobotArmService.RobotArmState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultMessage
        {
            get
            {
                return this.ResultMessageField;
            }
            set
            {
                this.ResultMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RobotArmClient.RobotArmService.RobotArmState State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RobotArmState", Namespace="http://schemas.datacontract.org/2004/07/RobotArmServer.Models")]
    public partial class RobotArmState : object
    {
        
        private int AngleField;
        
        private int XField;
        
        private int YField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Angle
        {
            get
            {
                return this.AngleField;
            }
            set
            {
                this.AngleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X
        {
            get
            {
                return this.XField;
            }
            set
            {
                this.XField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y
        {
            get
            {
                return this.YField;
            }
            set
            {
                this.YField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RobotArmClient.RobotArmService.IRobotArmService", CallbackContract=typeof(RobotArmClient.RobotArmService.IRobotArmServiceCallback))]
    public interface IRobotArmService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRobotArmService/RegisterClient", ReplyAction="http://tempuri.org/IRobotArmService/RegisterClientResponse")]
        System.Threading.Tasks.Task<string> RegisterClientAsync(string clientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRobotArmService/UnregisterClient", ReplyAction="http://tempuri.org/IRobotArmService/UnregisterClientResponse")]
        System.Threading.Tasks.Task<string> UnregisterClientAsync(string clientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRobotArmService/ExecuteCommand", ReplyAction="http://tempuri.org/IRobotArmService/ExecuteCommandResponse")]
        System.Threading.Tasks.Task<RobotArmClient.RobotArmService.CommandResult> ExecuteCommandAsync(string clientName, string encryptedCommand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRobotArmService/GetCurrentState", ReplyAction="http://tempuri.org/IRobotArmService/GetCurrentStateResponse")]
        System.Threading.Tasks.Task<RobotArmClient.RobotArmService.RobotArmState> GetCurrentStateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IRobotArmServiceCallback
    {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRobotArmService/OnStateChanged")]
        void OnStateChanged(RobotArmClient.RobotArmService.RobotArmState state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IRobotArmServiceChannel : RobotArmClient.RobotArmService.IRobotArmService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class RobotArmServiceClientBase : System.ServiceModel.DuplexClientBase<RobotArmClient.RobotArmService.IRobotArmService>, RobotArmClient.RobotArmService.IRobotArmService
    {
        
        public RobotArmServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> RegisterClientAsync(string clientName)
        {
            return base.Channel.RegisterClientAsync(clientName);
        }
        
        public System.Threading.Tasks.Task<string> UnregisterClientAsync(string clientName)
        {
            return base.Channel.UnregisterClientAsync(clientName);
        }
        
        public System.Threading.Tasks.Task<RobotArmClient.RobotArmService.CommandResult> ExecuteCommandAsync(string clientName, string command)
        {
            return base.Channel.ExecuteCommandAsync(clientName, command);
        }
        
        public System.Threading.Tasks.Task<RobotArmClient.RobotArmService.RobotArmState> GetCurrentStateAsync()
        {
            return base.Channel.GetCurrentStateAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
    
    public class OnStateChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public OnStateChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public RobotArmClient.RobotArmService.RobotArmState state
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((RobotArmClient.RobotArmService.RobotArmState)(this.results[0]));
            }
        }
    }
    
    public partial class RobotArmServiceClient : RobotArmServiceClientBase
    {
        
        public RobotArmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new RobotArmServiceClientCallback(), binding, remoteAddress)
        {
        }
        
        private RobotArmServiceClient(RobotArmServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress)
        {
            callbackImpl.Initialize(this);
        }
        
        public event System.EventHandler<OnStateChangedReceivedEventArgs> OnStateChangedReceived;
        
        private void OnOnStateChangedReceived(object state)
        {
            if ((this.OnStateChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.OnStateChangedReceived(this, new OnStateChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private class RobotArmServiceClientCallback : object, IRobotArmServiceCallback
        {
            
            private RobotArmServiceClient proxy;
            
            public void Initialize(RobotArmServiceClient proxy)
            {
                this.proxy = proxy;
            }
            
            public void OnStateChanged(RobotArmClient.RobotArmService.RobotArmState state)
            {
                this.proxy.OnOnStateChangedReceived(new object[] {
                            state});
            }
        }
    }
}
